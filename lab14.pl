%consult("C:/users/danek/Documents/GitHub/Prolog_Labs/lab14.pl").

read_str(A,N,Flag):-get0(X),r_str(X,A,[],N,0,Flag).
r_str(-1,A,A,N,N,1):-!.
r_str(10,A,A,N,N,0):-!.
r_str(X,A,B,N,K,Flag):-K1 is K+1,append(B,[X],B1),get0(X1),r_str(X1,A,B1,N,K1,Flag).

read_list_str(List):-read_str(A,_,Flag),read_list_str([A],List,Flag).
read_list_str(List,List,1):-!.
read_list_str(Cur_list,List,0):-
	read_str(A,_,Flag),append(Cur_list,[A],C_l),read_list_str(C_l,List,Flag).
	
read_str(A,N):-get0(X),r_str(X,A,[],N,0).
r_str(10,A,A,N,N):-!.
r_str(X,A,B,N,K):-K1 is K+1,append(B,[X],B1),get0(X1),r_str(X1,A,B1,N,K1).	

write_str([]):-!.
write_str([H|Tail]):-put(H),write_str(Tail).

write_list_str([]):-!.
write_list_str([H|T]):-write_str(H),nl,write_list_str(T).

append([],X,X).
append([X|T],Y,[X|T1]) :- append(T,Y,T1).

%1.1 Дана строка. Вывести ее три раза через запятую и показать количество символов в ней.
%1.2 Дана строка. Найти количество слов.
%1.3 Дана строка, определить самое частое слово
%1.4 Дана строка. Вывести первые три символа и последний три символа, если длина строки больше 5 Иначе вывести первый символ столько раз, какова длина строки.
%1.5 Дана строка. Показать номера символов, совпадающих с последним символом строки.
%2.1 Дан файл. Прочитать из файла строки и вывести длину наибольшей строки.
%2.2 Дан файл. Определить, сколько в файле строк, не содержащих пробелы.
%2.3 Дан файл, найти и вывести на экран только те строки, в которых букв А больше, чем в среднем на строку.
%2.4 Дан файл, вывести самое частое слово.
%2.5 Дан файл, вывести в отдельный файл строки, состоящие из слов, не повторяющихся в исходном файле.
%3 Дана строка, состоящая из символов латиницы. Необходимо проверить, упорядочены ли строчные символы этой строки по возрастанию.
%4 Дана строка. Необходимо подсчитать количество букв "А" в этой строке.
%5 Дана строка в которой записан путь к файлу. Необходимо найти имя файла без расширения.
%6 Результат записывать в файл.
%6.1 Дано множество. Построить все размещения с повторениями по k элементов.
%6.2 Дано множество. Построить все перестановки.
%6.3 Дано множество. Построить все размещения по k элементов.
%6.4 Дано множество. Построить все подмножества.
%6.5 Дано множество. Построить все сочетания по k элементов.
%6.6 Дано множество. Построить все сочетания с повторениями.
%7 Дано множество {a,b,c,d,e,f}. Построить все слова длины 5, в которых ровно две буквы a. Вывод в файл.
%8 Дано множество {a,b,c,d,e,f}. Построить все слова длины 5, в которых ровно 2 буквы a, остальные буквы не повторяются. Вывод в файл.
%9 Дано множество {a,b,c,d,e,f}. Построить все слова длины 5, в которых ровно одна буква повторяется 2 раза, остальные буквы не повторяются. Вывод в файл.
%10 Дано множество {a,b,c,d,e,f}. Построить все слова длины 6, в которых ровно 2 буквы повторяются 2 раза, остальные буквы не повторяются. Вывод в файл.